@model JetsonWeb.Models.ClusterSummary
@{
    ViewData["Title"] = "Cluster Utilization (Advanced View)";
}

<script type="text/javascript" src="https://www.chartjs.org/dist/2.9.3/Chart.min.js"></script>
<script type="text/javascript" src="https://www.chartjs.org/samples/latest/utils.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<h3>Cluster Utilization (Advanced View)</h3>

<div id="HeaderWrapper">
    <div id="ClusterID">
        <h5>Cluster @Html.DisplayNameFor(model => model.Cluster.Id): @Html.DisplayFor(model => model.Cluster.Id)</h5>
        <p id="last-updated">Last Updated: @ViewData["LastUpdated"]</p>
    </div>
    <div id="Overview">
        <a href="ClusterUtilization?id=@Html.DisplayFor(model => model.Cluster.Id)" class="prevBtn">&laquo; Overview</a>
    </div>
    <hr class="divider" />
</div>

<div id="ClusterPowerUtilizationRT2">
    <div class="chart-container-rt2">
        <canvas id="cluster-per-node-voltage-utilization-rt"></canvas>
    </div>
</div>

<div id="SummaryTable">
    <table class="ClusterInfoTable">
        <tr class="ClusterInfo">
            <th class="ClusterInfo" colspan="5">Node Information</th>
        </tr>
        <tr class="ClusterInfo">
            <th class="ClusterInfoID">Node ID</th>
            <th class="ClusterInfoIP">IP Address</th>
            <th class="ClusterInfoOS">Operating System</th>
            <th class="ClusterInfoUT">Node Uptime</th>
            <th class="ClusterInfoUT">Last Update Received</th>
        </tr>
        @foreach (var node in Model.NodeSummaries)
        {
    <tr class="ClusterInfo">
        <td id=@Html.Raw("\"nodeid_" + node.Id.ToString() + "\"") class="ClusterInfoID"> @Html.DisplayFor(modelItem => node.Id) </td>
        <td id=@Html.Raw("\"nodeip_" + node.Id.ToString() + "\"") class="ClusterInfoIP"> @Html.DisplayFor(modelItem => node.Node.IPAddress) </td>
        <td id=@Html.Raw("\"nodeos_" + node.Id.ToString() + "\"") class="ClusterInfoOS"> @Html.DisplayFor(modelItem => node.Node.OperatingSystem) </td>
        <td id=@Html.Raw("\"nodeuptime_" + node.Id.ToString() + "\"") class="ClusterInfoUT"> @Html.DisplayFor(modelItem => node.Node.UpTime) </td>
        <td id=@Html.Raw("\"nodelastrecv_" + node.Id.ToString() + "\"") class="ClusterInfoLUR"></td>
    </tr>
        }
    </table>
</div>

<script>

    var clusterPerNodeVoltageUtilizationRTConfig = {
        type: 'bar',
        data: {
            datasets: [{
                data: [
                ],
                backgroundColor: window.chartColors.purple,
                borderWidth: 1,
                label: 'Per-Node Voltage Draw'
            }],
            labels: [
                @foreach(var node in Model.NodeSummaries)
                {
                    @Html.Raw(node.Id.ToString());
                    @Html.Raw(",");
                }
            ]
        },
        options: {
            responsive: true,
            legend: {
                position: 'top'
            },
            title: {
                display: true,
                text: 'Cluster Per-Node Voltage Draw'
            },
            animation: {
                animateScale: true,
                animateRotate: true
            },
            scales: {
                yAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: 'Voltage (V)'
                    },
                    ticks: {
                        autoSkip: true,
                        maxTicksLimit: 6,
                        suggestedMin: 0
                    }
                }]
            }
        }
    };

    window.onload = function () {
        var clusterPerNodeVoltageUtilizationRTCtx = this.document.getElementById('cluster-per-node-voltage-utilization-rt').getContext('2d');
        window.clusterPerNodeVoltageChart = new Chart(clusterPerNodeVoltageUtilizationRTCtx, this.clusterPerNodeVoltageUtilizationRTConfig);
        updateData();
    };

    setInterval(updateData, @ViewData["ReportingInterval"]* 1000);


    function updateData() {
        $.ajax({
            type: "GET",
            url: "../AdvancedViewLive/GetAdvancedClusterUtilization?id=@Html.DisplayFor(model => model.Cluster.Id)",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (realtimeData) {
                console.log(realtimeData);
                clusterPerNodeVoltageChart.data.datasets[0].data = realtimeData.perNodeVoltageUtilization;
                clusterPerNodeVoltageChart.update();

                $.each(realtimeData.nodeIpAddresses, function (i, nodeIP) {
                    var ipInTable = document.getElementById("nodeip_".concat(i.toString()));
                    ipInTable.innerHTML = nodeIP;
                });

                $.each(realtimeData.nodeOperatingSystems, function (i, nodeOS) {
                    var osInTable = document.getElementById("nodeos_".concat(i.toString()));
                    osInTable.innerHTML = nodeOS;
                });

                $.each(realtimeData.nodeUpTimes, function (i, nodeUpTime) {
                    var uptimeInTable = document.getElementById("nodeuptime_".concat(i.toString()));
                    uptimeInTable.innerHTML = nodeUpTime;
                });

                $.each(realtimeData.perNodeLastDataReceived, function (i, lastData) {
                    console.log(lastData);
                    var lastRecvInTable = document.getElementById("nodelastrecv_".concat(i.toString()));
                    lastRecvInTable.innerHTML = lastData;
                });

                var updated = document.getElementById("last-updated");
                updated.innerHTML = "Last Updated: " + realtimeData.timeStamp;
            },
            failure: function (realtimeData) {

            },
            error: function (realtimeData) {

            }
        });
    }
</script>

<style>
    .ClusterInfo, .ClusterInfoID, .ClusterInfoIP, .ClusterInfoOS, .ClusterInfoUT, .ClusterInfoLUR {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        border: 1px solid black;
        text-align: center;
    }

    th.ClusterInfo, th.ClusterInfoID, th.ClusterInfoIP, th.ClusterInfoOS, th.ClusterInfoUT, th.ClusterInfoLUR {
        padding: 6px;
        background-color: #dddddd;
    }

    tr.ClusterInfo:hover {
        background-color: #ededed;
    }

    .chart-container-rt {
        width: 45%;
        margin: auto;
    }

    .chart-container-rt2 {
        width: 45%;
        display: inline-block;
    }

    #ClusterMemoryUtilizationRT {
        margin: auto;
    }

    #ClusterID {
        display: inline-block;
    }

    #Overview {
        float: right;
        display: inline-block;
    }

    .prevBtn {
        background-color: #f1f1f1;
        color: black;
        padding: 8px 16px;
        display: inline-block;
        text-decoration: none;
    }

    .prevBtn:hover {
        background-color: #dddddd;
        color: black;
    }

    .divider {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
    }

    p {
        margin: 0px;
        padding: 0px;
    }

    h3, h5 {
        margin-bottom: 0.05em;
    }
</style>
